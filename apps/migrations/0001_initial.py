# Generated by Django 3.0 on 2019-12-12 02:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('code', models.CharField(max_length=10, verbose_name='easy tag to recognize the obj')),
                ('tag', models.CharField(max_length=20, verbose_name='Tag that the user will set')),
                ('end_date', models.DateTimeField(verbose_name='Estimation of the date when the product will be delivered')),
                ('description', models.CharField(max_length=300, verbose_name='Extra description of the case')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('tag', models.CharField(max_length=15, verbose_name='name of the case that the creator can set')),
                ('estimated_delivery', models.DateTimeField(verbose_name='Estimation of the end of the process')),
                ('conditions', models.CharField(max_length=300, verbose_name='Extra Conditions that have to be in the product')),
                ('warranty', models.CharField(max_length=300, verbose_name='Warranties that will have the product')),
                ('authorized_at', models.DateTimeField(verbose_name='When the request is authorized')),
                ('inspected_at', models.DateTimeField(verbose_name='When the request is accepted')),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorizer_user', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester_user', to=settings.AUTH_USER_MODEL)),
                ('inspected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspector_user', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10, verbose_name='easy identifier of the state')),
                ('name', models.CharField(max_length=20, verbose_name='State Name')),
                ('description', models.CharField(max_length=300, verbose_name='description of the state')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('type', models.CharField(choices=[('USE', 'USO'), ('FUNCTIONAL', 'FUNCIONAL'), ('OBJECT_RESISTANCE', 'RESISTENCIA_OBJETO'), ('TECNICAL_PRODUCTIVE', 'TECNICO_PRODUCTIVO'), ('NORMATIVE', 'NORMATIVO')], max_length=20, verbose_name='Type of requirement')),
                ('name', models.CharField(max_length=50, verbose_name='Name of the requirement')),
                ('parameter', models.CharField(max_length=50, verbose_name='Parameter of the requirement')),
                ('req_range', models.CharField(max_length=50, verbose_name='Range ???')),
                ('measure', models.CharField(max_length=50, verbose_name='Measure of the requirement')),
                ('importance', models.CharField(max_length=50, verbose_name='Importance of the requirement')),
                ('approved', models.BooleanField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('tag', models.CharField(max_length=10, verbose_name='easy identifier of the service')),
                ('name', models.CharField(max_length=20, verbose_name='Service Name')),
                ('description', models.CharField(max_length=300, verbose_name='description of the Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('price', models.FloatField(verbose_name='Price of the service')),
                ('quantity', models.IntegerField(verbose_name='Amount of products to create')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_obj', to='apps.Request')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_service', to='apps.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('content', models.CharField(max_length=500, verbose_name='content of the comment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_user', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_belongs', to='apps.Request')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='request',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_state', to='apps.RequestState'),
        ),
        migrations.CreateModel(
            name='CaseRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_owner', to='apps.Case')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement', to='apps.Requirement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='case',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_request', to='apps.Request'),
        ),
    ]
