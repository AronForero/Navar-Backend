# Generated by Django 3.0 on 2019-12-10 17:27

import authentication.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(regex='(^[a-zA-Z0-9_.+-]+@+[a-zA-Z]+\\.[a-zA-Z]+$)')], verbose_name='Email address of the user.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authentication.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10, verbose_name='tag to recognize the role easily')),
                ('name', models.CharField(max_length=15, verbose_name='Role Name')),
                ('description', models.CharField(max_length=300, verbose_name='Description of the role (task to do)')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_role', to='authentication.Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalUserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trashed', models.BooleanField(default=False, verbose_name='This field indicates if the objects was deleted.')),
                ('trashed_at', models.DateTimeField(default=None, null=True, verbose_name='This field save the timestamp when the object was deleted.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cuando fue creada la entrada.')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Cuando fue actualizada la entrada por ultima vez.')),
                ('birthday', models.DateField()),
                ('city', models.CharField(max_length=15, verbose_name='City where the user lives')),
                ('address', models.CharField(max_length=50, verbose_name='addres of where the user lives')),
                ('phone_number', models.CharField(max_length=15, null=True, verbose_name='Phone Number of the user')),
                ('weight', models.FloatField(null=True, verbose_name='Just required for patients. Weight of the patient in Kg')),
                ('amputated_limb', models.CharField(choices=[('RIGHT_LEG', 'pierna_derecha'), ('LEFT_LEG', 'pierna_izquierda'), ('RIGHT_ARM', 'brazo_derecho'), ('LEFT_ARM', 'brazo_izquierdo')], max_length=10, null=True, verbose_name='Limb affected')),
                ('profession', models.CharField(max_length=30, null=True, verbose_name='Occupation of the patient')),
                ('amputation_level', models.CharField(choices=[('Level_tal', 'bla bla')], max_length=10, null=True, verbose_name='Choices')),
                ('socket_type', models.CharField(choices=[('TYPE_1', 'TYPE_1')], max_length=10, null=True, verbose_name='Choices')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
